/*
   Inspiration from: https://learn.adafruit.com/animated-neopixel-gemma-glow-fur-scarf

   By: Costyn van Dongen

   Note: MAX LEDS: 255 (due to use of uint8_t)

   TODO:
       Get rid of MPU interrupt stuff. I don't need it, but removing it without breaking shit is tricky.
       ripple-pal
       - color rain https://www.youtube.com/watch?v=nHBImYTDZ9I  (for strip, not ring)
*/

// Turn on microsecond resolution; needed to sync some routines to BPM
#define _TASK_MICRO_RES
#define _TASK_TIMECRITICAL

#include <FastLED.h>
#include <TaskScheduler.h>
#include <ArduinoTapTempo.h>

#ifdef USING_MPU
#include <I2Cdev.h>
#include <MPU6050_6Axis_MotionApps20.h>
#endif

#define DEFAULT_LED_MODE 1

// Uncomment for debug output to Serial. Comment to make small(er) code :)
#define DEBUG

// Uncommment to get MPU debbuging:
//#define DEBUG_WITH_TASK

#ifdef DEBUG
#define DEBUG_PRINT(x)       Serial.print (x)
#define DEBUG_PRINTDEC(x)    Serial.print (x, DEC)
#define DEBUG_PRINTLN(x)     Serial.println (x)
#else
#define DEBUG_PRINT(x)
#define DEBUG_PRINTDEC(x)
#define DEBUG_PRINTLN(x)
#endif

#ifdef _TASK_MICRO_RES
#define TASK_RES_MULTIPLIER 1000
#endif

//black green white red

#ifdef NEO_PIXEL
#define CHIPSET     WS2812B
#define COLOR_ORDER GRB  // Try mixing up the letters (RGB, GBR, BRG, etc) for a whole new world of color combinations
#endif


#ifdef APA_102
#include <SPI.h>
#define CHIPSET     APA102
#define COLOR_ORDER BGR
#endif

// Sanity checks:
#ifndef NUM_LEDS
#error "Error: NUM_LEDS not defined"
#endif

#ifndef DEFAULT_BRIGHTNESS
#error "Error: DEFAULT_BRIGHTNESS not defined"
#endif

#ifndef DEFAULT_BPM
#error "Error: DEFAULT_BPM not defined"
#endif

//#define NUM_LEDS 139
CRGB leds[NUM_LEDS];
uint8_t maxBright = DEFAULT_BRIGHTNESS ;

// BPM and button stuff
boolean longPressActive = false;
ArduinoTapTempo tapTempo;

// Serial input to change patterns, speed, etc
String inputString = "";         // a String to hold incoming data
boolean stringComplete = false;  // whether the string is complete


byte ledMode = DEFAULT_LED_MODE ; // Which mode do we start with

// Routine Palette Rainbow is always included - a safe routine
const char *routines[] = {
  "p_rb",
#ifdef RT_P_RB_STRIPE
  "p_rb_stripe",
#endif
#ifdef RT_P_OCEAN
  "p_ocean",
#endif
#ifdef RT_P_HEAT
  "p_heat",
#endif
#ifdef RT_P_LAVA
  "p_lava",
#endif
#ifdef RT_P_PARTY
  "p_party",
#endif
#ifdef RT_TWIRL1
  "twirl1",
#endif
#ifdef RT_TWIRL2
  "twirl2",
#endif
#ifdef RT_TWIRL4
  "twirl4",
#endif
#ifdef RT_TWIRL6
  "twirl6",
#endif
#ifdef RT_TWIRL2_O
  "twirl2o",
#endif
#ifdef RT_TWIRL4_O
  "twirl4o",
#endif
#ifdef RT_TWIRL6_O
  "twirl6o",
#endif
#ifdef RT_FADE_GLITTER
  "fglitter",
#endif
#ifdef RT_DISCO_GLITTER
  "dglitter",
#endif
#ifdef RT_FIRE2012
  "fire2012",
#endif
#ifdef RT_RACERS
  "racers",
#endif
#ifdef RT_WAVE
  "wave",
#endif
#ifdef RT_SHAKE_IT
  "shakeit",
#endif
#ifdef RT_STROBE1
  "strobe1",
#endif
#ifdef RT_STROBE2
  "strobe2",
#endif
#ifdef RT_GLED
  "gled",
#endif
#ifdef RT_HEARTBEAT
  "heartbeat",
#endif
#ifdef RT_FASTLOOP
  "fastloop",
#endif
#ifdef RT_FASTLOOP2
  "fastloop2",
#endif
#ifdef RT_PENDULUM
  "pendulum",
#endif
#ifdef RT_VUMETER
  "vumeter",
#endif
#ifdef RT_NOISE_LAVA
  "noise_lava",
#endif
#ifdef RT_NOISE_PARTY
  "noise_party",
#endif
#ifdef RT_BOUNCEBLEND
  "bounceblend",
#endif
#ifdef RT_JUGGLE_PAL
  "jugglepal",
#endif
#ifdef RT_QUAD_STROBE
  "quadstrobe",
#endif
#ifdef RT_PULSE_3
  "pulse3",
#endif
#ifdef RT_PULSE_5_1
  "pulse5_1",
#endif
#ifdef RT_PULSE_5_2
  "pulse5_2",
#endif
#ifdef RT_PULSE_5_3
  "pulse5_3",
#endif
#ifdef RT_THREE_SIN_PAL
  "tsp",
#endif
#ifdef RT_COLOR_GLOW
  "color_glow",
#endif
#ifdef RT_FAN_WIPE
  "fan_wipe",
#endif
#ifdef RT_DROPLETS
  "droplets",
#endif
#ifdef RT_DROPLETS2
  "droplets2",
#endif
#ifdef RT_BOUNCYBALLS
  "bouncyballs",
#endif
#ifdef RT_POVPATTERNS
  "povpatterns",
#endif
#ifdef RT_BLACK
  "black",
#endif

};

#define NUMROUTINES (sizeof(routines)/sizeof(char *)) //array size


// const char Image[][NUM_LEDS][3] = {{{0, 0, 0}, {0, 1, 2}, {5, 5, 4}, {23, 19, 5}, {2, 2, 3}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 1}, {1, 0, 1}, {3, 1, 2}, {105, 26, 78}, {238, 52, 174}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {243, 53, 179}, {205, 47, 151}, {52, 13, 37}, {2, 2, 0}, {1, 0, 0}, {0, 0, 0}, {0, 0, 0}, {2, 1, 1}, {4, 1, 1}, {2, 1, 1}, {2, 0, 2}, {0, 0, 0}, {0, 0, 0}, {2, 1, 1}, {10, 1, 3}, {0, 2, 1}, {2, 1, 2}, {0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {5, 1, 6}, {67, 5, 125}, {116, 4, 215}, {109, 4, 199}, {38, 5, 68}, {1, 2, 1}, {13, 108, 50}, {6, 220, 88}, {3, 223, 91}, {3, 223, 90}, {10, 149, 65}, {3, 2, 2}}, {{0, 0, 0}, {7, 5, 6}, {180, 163, 24}, {237, 214, 12}, {71, 60, 11}, {1, 1, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {4, 2, 2}, {114, 28, 85}, {243, 52, 183}, {243, 53, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 53, 180}, {244, 53, 180}, {227, 53, 169}, {41, 10, 31}, {2, 2, 1}, {0, 0, 0}, {0, 0, 0}, {5, 20, 8}, {9, 123, 51}, {10, 150, 65}, {11, 61, 26}, {1, 1, 0}, {0, 0, 0}, {55, 14, 41}, {200, 49, 147}, {97, 23, 71}, {1, 1, 1}, {0, 0, 0}, {0, 0, 0}, {0, 1, 0}, {2, 0, 3}, {1, 1, 2}, {4, 1, 9}, {3, 1, 8}, {0, 1, 5}, {1, 1, 8}, {12, 72, 30}, {4, 221, 89}, {3, 223, 91}, {3, 223, 90}, {11, 122, 51}, {3, 1, 2}}, {{1, 0, 1}, {18, 14, 7}, {235, 210, 19}, {246, 217, 7}, {134, 122, 25}, {1, 0, 3}, {1, 1, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {3, 0, 2}, {50, 12, 34}, {242, 54, 179}, {244, 53, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {243, 54, 180}, {243, 53, 179}, {215, 53, 160}, {3, 1, 4}, {0, 0, 0}, {0, 0, 0}, {15, 159, 70}, {3, 222, 89}, {4, 222, 89}, {8, 214, 89}, {5, 31, 12}, {2, 1, 1}, {135, 37, 100}, {238, 55, 180}, {209, 57, 157}, {4, 2, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 1}, {1, 1, 1}, {0, 1, 1}, {0, 1, 0}, {5, 1, 2}, {14, 142, 63}, {7, 193, 80}, {15, 159, 71}, {6, 22, 8}, {1, 1, 1}}, {{0, 0, 1}, {1, 1, 6}, {56, 47, 10}, {131, 116, 23}, {6, 4, 1}, {1, 0, 4}, {5, 0, 9}, {0, 0, 2}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {5, 2, 4}, {180, 48, 135}, {244, 53, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {243, 54, 179}, {242, 53, 180}, {69, 16, 51}, {1, 1, 1}, {0, 2, 0}, {7, 193, 80}, {4, 221, 90}, {3, 221, 91}, {2, 222, 90}, {9, 76, 33}, {3, 1, 2}, {22, 5, 18}, {144, 39, 111}, {33, 8, 26}, {1, 1, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 0}, {0, 2, 1}, {1, 5, 2}, {1, 3, 0}, {0, 0, 0}, {0, 1, 2}, {0, 0, 3}, {3, 1, 1}, {4, 1, 3}, {1, 2, 2}, {3, 0, 1}}, {{0, 0, 0}, {0, 0, 0}, {0, 0, 1}, {2, 1, 8}, {40, 3, 77}, {108, 8, 194}, {120, 7, 221}, {84, 8, 155}, {16, 1, 32}, {1, 1, 3}, {3, 0, 4}, {0, 0, 0}, {0, 0, 0}, {28, 7, 23}, {238, 56, 176}, {243, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 53, 179}, {244, 52, 182}, {199, 53, 149}, {4, 1, 3}, {2, 1, 0}, {15, 141, 64}, {6, 222, 91}, {5, 221, 90}, {9, 205, 88}, {2, 17, 7}, {1, 0, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {3, 1, 1}, {4, 22, 9}, {14, 139, 63}, {18, 203, 94}, {18, 186, 82}, {6, 71, 28}, {3, 3, 2}, {4, 0, 0}, {13, 10, 3}, {157, 142, 27}, {89, 79, 14}, {3, 2, 5}}, {{0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {68, 5, 131}, {136, 0, 244}, {131, 1, 238}, {128, 0, 246}, {130, 1, 240}, {126, 4, 234}, {24, 3, 46}, {0, 0, 2}, {0, 0, 0}, {0, 0, 0}, {48, 12, 35}, {243, 53, 180}, {243, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {242, 54, 182}, {234, 58, 176}, {6, 4, 7}, {1, 1, 2}, {3, 1, 0}, {11, 70, 27}, {13, 107, 49}, {3, 17, 6}, {1, 0, 2}, {1, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {7, 30, 13}, {13, 211, 91}, {2, 223, 89}, {7, 219, 93}, {2, 222, 89}, {4, 221, 90}, {13, 144, 67}, {4, 1, 2}, {139, 127, 26}, {241, 219, 8}, {243, 217, 10}, {26, 23, 7}}, {{0, 0, 1}, {0, 1, 3}, {22, 3, 41}, {126, 3, 242}, {131, 0, 245}, {131, 0, 244}, {131, 0, 243}, {131, 0, 243}, {131, 0, 244}, {93, 6, 170}, {1, 1, 3}, {0, 0, 0}, {0, 0, 0}, {51, 12, 39}, {239, 54, 183}, {244, 54, 179}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {243, 54, 181}, {244, 53, 177}, {235, 57, 173}, {6, 3, 6}, {1, 1, 3}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 2, 7}, {38, 32, 7}, {82, 76, 20}, {4, 4, 6}, {5, 0, 5}, {13, 150, 66}, {2, 222, 90}, {3, 222, 91}, {3, 222, 90}, {3, 222, 90}, {3, 222, 90}, {10, 218, 90}, {2, 23, 10}, {41, 31, 8}, {233, 209, 23}, {166, 151, 24}, {3, 2, 3}}, {{0, 0, 1}, {1, 1, 1}, {42, 2, 81}, {134, 0, 244}, {132, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {121, 5, 223}, {8, 0, 17}, {0, 0, 0}, {0, 0, 0}, {34, 10, 25}, {243, 54, 179}, {244, 53, 179}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {243, 54, 180}, {244, 54, 176}, {214, 58, 160}, {3, 0, 2}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {4, 1, 6}, {234, 209, 7}, {249, 216, 9}, {90, 81, 11}, {1, 4, 2}, {8, 197, 80}, {4, 221, 89}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {2, 223, 91}, {2, 223, 88}, {7, 77, 33}, {0, 0, 5}, {8, 8, 6}, {3, 3, 5}, {0, 0, 3}}, {{1, 0, 2}, {1, 1, 1}, {37, 2, 71}, {132, 0, 246}, {133, 0, 241}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {116, 5, 217}, {7, 0, 14}, {2, 0, 2}, {0, 0, 1}, {10, 2, 7}, {214, 54, 161}, {243, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 53, 180}, {243, 53, 179}, {118, 31, 82}, {1, 0, 0}, {0, 0, 0}, {2, 0, 2}, {1, 1, 1}, {1, 1, 3}, {1, 1, 3}, {1, 1, 1}, {2, 0, 2}, {0, 0, 0}, {0, 0, 0}, {2, 1, 2}, {218, 200, 21}, {245, 217, 11}, {64, 56, 11}, {1, 4, 3}, {9, 187, 76}, {2, 222, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 222, 91}, {1, 223, 88}, {5, 62, 23}, {1, 0, 1}, {0, 0, 1}, {2, 1, 0}, {0, 1, 1}}, {{39, 10, 30}, {1, 1, 0}, {13, 1, 27}, {123, 6, 231}, {130, 0, 246}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {73, 5, 132}, {6, 3, 8}, {30, 26, 6}, {5, 4, 3}, {3, 2, 1}, {87, 18, 62}, {243, 54, 179}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 53, 179}, {232, 52, 172}, {11, 3, 5}, {0, 0, 0}, {0, 0, 0}, {2, 1, 4}, {7, 51, 110}, {5, 97, 205}, {5, 97, 205}, {7, 51, 110}, {2, 1, 4}, {0, 0, 0}, {0, 0, 0}, {0, 1, 4}, {16, 13, 8}, {35, 30, 9}, {2, 1, 6}, {3, 2, 3}, {11, 123, 53}, {4, 222, 89}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {2, 223, 90}, {10, 217, 94}, {5, 14, 5}, {0, 0, 0}, {0, 0, 0}, {21, 4, 15}, {107, 31, 78}}, {{177, 45, 129}, {3, 2, 4}, {2, 1, 3}, {41, 3, 76}, {125, 4, 229}, {132, 0, 243}, {130, 0, 243}, {132, 0, 247}, {99, 4, 185}, {13, 1, 28}, {138, 123, 13}, {244, 215, 13}, {150, 136, 15}, {0, 0, 1}, {9, 2, 6}, {183, 43, 135}, {243, 53, 182}, {243, 53, 179}, {244, 53, 178}, {243, 53, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 53, 180}, {242, 54, 179}, {239, 53, 179}, {95, 24, 71}, {4, 0, 5}, {0, 0, 0}, {0, 0, 0}, {5, 26, 63}, {4, 112, 236}, {0, 114, 245}, {0, 114, 245}, {4, 112, 236}, {5, 26, 63}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {1, 0, 2}, {0, 0, 3}, {5, 15, 6}, {11, 163, 72}, {4, 222, 89}, {5, 221, 91}, {4, 223, 89}, {8, 213, 92}, {9, 75, 30}, {3, 0, 2}, {0, 0, 0}, {0, 0, 0}, {135, 38, 100}, {246, 51, 182}}, {{115, 29, 87}, {1, 3, 2}, {2, 1, 1}, {1, 2, 3}, {18, 1, 35}, {60, 5, 116}, {73, 4, 135}, {46, 4, 84}, {6, 0, 12}, {1, 1, 4}, {166, 150, 15}, {244, 219, 3}, {181, 163, 15}, {0, 0, 0}, {0, 0, 0}, {16, 3, 10}, {180, 42, 133}, {242, 53, 180}, {243, 53, 181}, {244, 53, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {242, 54, 178}, {238, 51, 175}, {112, 28, 83}, {2, 2, 1}, {1, 1, 4}, {0, 0, 0}, {0, 0, 0}, {10, 58, 119}, {1, 113, 245}, {0, 115, 244}, {0, 115, 244}, {1, 113, 245}, {10, 58, 119}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 0}, {5, 1, 0}, {4, 7, 3}, {10, 74, 33}, {8, 122, 52}, {9, 106, 46}, {4, 31, 15}, {6, 1, 4}, {1, 1, 0}, {0, 0, 0}, {0, 0, 0}, {78, 22, 57}, {208, 50, 154}}, {{1, 1, 1}, {1, 0, 1}, {0, 1, 1}, {1, 0, 2}, {0, 0, 3}, {2, 0, 4}, {1, 1, 5}, {0, 1, 0}, {0, 0, 3}, {0, 1, 1}, {23, 20, 5}, {100, 94, 17}, {28, 22, 5}, {0, 0, 2}, {0, 0, 1}, {3, 0, 1}, {2, 3, 6}, {103, 26, 78}, {199, 45, 146}, {233, 54, 173}, {242, 54, 178}, {239, 55, 177}, {226, 53, 166}, {170, 41, 127}, {54, 13, 42}, {2, 2, 1}, {2, 0, 1}, {1, 0, 0}, {0, 0, 0}, {0, 0, 0}, {6, 29, 68}, {3, 112, 238}, {0, 114, 244}, {0, 114, 244}, {3, 112, 238}, {6, 29, 68}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 2}, {2, 1, 0}, {2, 0, 1}, {1, 0, 1}, {2, 1, 2}, {0, 2, 1}, {3, 0, 1}, {0, 1, 0}, {0, 0, 2}, {0, 0, 0}, {0, 0, 0}, {1, 2, 0}, {8, 1, 4}}, {{0, 0, 0}, {0, 0, 0}, {1, 0, 0}, {2, 0, 4}, {2, 1, 2}, {0, 1, 4}, {0, 0, 5}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 4}, {1, 1, 2}, {0, 1, 4}, {1, 1, 2}, {2, 3, 2}, {4, 1, 3}, {19, 4, 14}, {43, 10, 30}, {39, 9, 27}, {12, 2, 8}, {3, 1, 2}, {1, 1, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {3, 0, 4}, {7, 58, 122}, {5, 102, 214}, {5, 102, 214}, {7, 58, 122}, {3, 0, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}, {{0, 0, 0}, {0, 0, 0}, {1, 0, 2}, {62, 53, 8}, {184, 165, 18}, {43, 35, 7}, {0, 1, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 1}, {1, 4, 8}, {3, 19, 46}, {6, 41, 92}, {5, 40, 91}, {4, 17, 42}, {3, 2, 8}, {0, 0, 4}, {0, 1, 1}, {0, 0, 1}, {1, 1, 2}, {3, 0, 0}, {24, 20, 4}, {24, 19, 4}, {0, 2, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {2, 0, 2}, {2, 1, 1}, {1, 2, 4}, {1, 2, 4}, {2, 1, 1}, {2, 0, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {2, 0, 1}, {26, 7, 20}, {39, 9, 28}, {12, 3, 8}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}, {{0, 0, 0}, {0, 0, 0}, {3, 2, 0}, {225, 202, 24}, {243, 219, 4}, {215, 199, 28}, {2, 3, 1}, {0, 0, 0}, {0, 0, 0}, {1, 0, 8}, {2, 0, 3}, {3, 20, 42}, {12, 101, 211}, {0, 116, 240}, {1, 114, 246}, {2, 113, 246}, {1, 117, 242}, {7, 98, 201}, {2, 10, 22}, {0, 0, 0}, {0, 0, 0}, {0, 1, 0}, {48, 41, 11}, {243, 215, 11}, {234, 208, 9}, {15, 12, 5}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 1}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 2}, {0, 3, 1}, {103, 27, 81}, {245, 52, 178}, {246, 52, 179}, {207, 51, 153}, {17, 2, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}, {{0, 0, 0}, {0, 0, 0}, {1, 0, 3}, {101, 90, 14}, {241, 215, 21}, {78, 61, 15}, {0, 1, 4}, {0, 0, 0}, {0, 0, 0}, {3, 0, 3}, {4, 16, 39}, {5, 111, 230}, {3, 113, 244}, {1, 114, 244}, {0, 113, 244}, {0, 115, 240}, {2, 113, 242}, {2, 114, 243}, {11, 108, 221}, {1, 8, 19}, {0, 0, 0}, {1, 1, 1}, {67, 61, 13}, {243, 217, 7}, {242, 217, 9}, {28, 26, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {2, 0, 8}, {2, 0, 8}, {2, 0, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 0}, {9, 1, 4}, {215, 52, 162}, {244, 53, 179}, {246, 52, 180}, {245, 52, 181}, {127, 33, 93}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}}, {{0, 0, 0}, {0, 0, 0}, {1, 0, 0}, {1, 1, 4}, {7, 6, 4}, {0, 2, 3}, {3, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 5}, {8, 77, 167}, {0, 114, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 246}, {3, 113, 244}, {10, 58, 126}, {1, 1, 3}, {0, 0, 4}, {3, 3, 6}, {47, 41, 7}, {44, 37, 6}, {0, 5, 1}, {1, 3, 0}, {14, 0, 19}, {84, 9, 149}, {122, 3, 230}, {126, 1, 236}, {129, 1, 236}, {125, 2, 230}, {104, 5, 189}, {33, 2, 58}, {0, 0, 5}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 0}, {5, 1, 4}, {217, 52, 162}, {240, 54, 181}, {245, 52, 178}, {243, 53, 180}, {125, 36, 99}, {0, 2, 2}, {6, 0, 10}, {31, 3, 58}, {33, 2, 59}, {5, 1, 10}, {2, 0, 3}, {0, 0, 0}, {0, 0, 0}}, {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 12, 2}, {10, 48, 19}, {1, 9, 1}, {2, 1, 0}, {0, 0, 0}, {0, 0, 0}, {3, 6, 23}, {4, 110, 228}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {1, 113, 241}, {0, 115, 243}, {8, 106, 221}, {1, 3, 16}, {1, 0, 2}, {1, 1, 5}, {1, 0, 2}, {0, 0, 4}, {2, 2, 4}, {46, 4, 89}, {126, 3, 233}, {132, 0, 243}, {129, 1, 244}, {130, 0, 243}, {132, 0, 245}, {131, 0, 243}, {131, 0, 245}, {128, 1, 239}, {83, 7, 156}, {3, 0, 5}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 1}, {1, 2, 1}, {111, 31, 84}, {240, 55, 177}, {241, 54, 180}, {211, 51, 157}, {22, 4, 15}, {48, 3, 92}, {123, 2, 228}, {131, 1, 243}, {129, 1, 239}, {124, 2, 229}, {52, 5, 97}, {1, 1, 2}, {0, 0, 0}}, {{1, 0, 1}, {2, 1, 2}, {8, 75, 31}, {7, 211, 87}, {4, 221, 89}, {6, 208, 86}, {7, 51, 21}, {2, 0, 0}, {0, 1, 1}, {4, 18, 42}, {4, 114, 241}, {0, 114, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {4, 113, 239}, {2, 11, 26}, {1, 0, 0}, {0, 0, 0}, {0, 0, 1}, {1, 0, 1}, {42, 3, 76}, {126, 2, 244}, {129, 0, 241}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 243}, {131, 0, 243}, {130, 0, 242}, {86, 6, 160}, {2, 0, 13}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {4, 2, 2}, {41, 11, 30}, {58, 15, 43}, {20, 7, 16}, {24, 3, 44}, {127, 3, 235}, {129, 0, 243}, {131, 0, 244}, {131, 0, 244}, {131, 0, 246}, {126, 3, 236}, {31, 3, 59}, {2, 1, 2}}, {{1, 1, 0}, {3, 10, 5}, {15, 202, 87}, {5, 220, 92}, {3, 221, 92}, {5, 221, 89}, {19, 196, 89}, {1, 6, 4}, {1, 0, 1}, {2, 11, 26}, {4, 112, 233}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 244}, {0, 114, 243}, {7, 111, 229}, {1, 7, 17}, {1, 0, 0}, {0, 0, 0}, {0, 0, 0}, {14, 1, 24}, {122, 5, 223}, {130, 0, 243}, {127, 1, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 243}, {131, 0, 243}, {129, 1, 240}, {39, 4, 75}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {2, 0, 1}, {2, 1, 3}, {2, 1, 4}, {69, 5, 129}, {133, 0, 246}, {134, 0, 246}, {131, 0, 244}, {131, 0, 243}, {131, 0, 244}, {133, 0, 245}, {75, 4, 141}, {1, 1, 3}}, {{0, 0, 0}, {3, 18, 8}, {9, 218, 91}, {2, 222, 91}, {3, 221, 90}, {5, 220, 91}, {13, 214, 92}, {3, 10, 4}, {1, 1, 1}, {1, 2, 3}, {6, 91, 192}, {0, 114, 243}, {0, 114, 243}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {1, 114, 245}, {1, 113, 240}, {7, 76, 161}, {2, 1, 6}, {1, 0, 1}, {0, 0, 0}, {0, 0, 1}, {54, 4, 99}, {129, 0, 243}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 243}, {131, 0, 242}, {111, 4, 210}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 2}, {1, 1, 2}, {87, 4, 162}, {130, 0, 243}, {132, 0, 241}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 243}, {91, 5, 167}, {2, 1, 5}}, {{0, 0, 1}, {2, 3, 1}, {16, 140, 61}, {3, 221, 90}, {4, 221, 90}, {4, 221, 91}, {16, 123, 56}, {0, 2, 0}, {1, 0, 2}, {3, 1, 2}, {7, 37, 76}, {4, 112, 235}, {0, 114, 243}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {1, 115, 245}, {5, 111, 233}, {3, 20, 45}, {1, 0, 3}, {1, 0, 1}, {0, 0, 0}, {2, 0, 3}, {101, 5, 187}, {131, 0, 246}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {132, 1, 244}, {128, 2, 237}, {3, 0, 5}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 2}, {3, 1, 2}, {57, 3, 105}, {129, 0, 247}, {130, 0, 245}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 243}, {62, 4, 116}, {1, 1, 4}}, {{0, 0, 0}, {0, 0, 0}, {2, 11, 4}, {15, 115, 51}, {9, 157, 67}, {17, 108, 49}, {4, 5, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 2}, {7, 49, 104}, {5, 110, 231}, {2, 114, 243}, {2, 114, 244}, {2, 114, 240}, {0, 114, 243}, {5, 107, 227}, {5, 34, 76}, {1, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {5, 0, 8}, {116, 6, 216}, {130, 0, 242}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {130, 0, 242}, {131, 1, 239}, {10, 0, 22}, {0, 0, 2}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {13, 2, 23}, {115, 5, 213}, {128, 1, 245}, {131, 0, 246}, {131, 1, 242}, {131, 1, 243}, {116, 5, 216}, {18, 3, 34}, {1, 0, 2}}, {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {3, 0, 0}, {1, 2, 2}, {2, 0, 2}, {1, 3, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {3, 1, 5}, {2, 16, 32}, {11, 67, 139}, {7, 88, 187}, {6, 88, 188}, {11, 61, 128}, {3, 7, 22}, {1, 2, 2}, {1, 1, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {5, 0, 9}, {117, 5, 219}, {131, 0, 242}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {130, 1, 241}, {131, 1, 235}, {11, 0, 23}, {0, 1, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 1}, {15, 2, 35}, {97, 6, 174}, {124, 2, 221}, {122, 3, 222}, {97, 6, 176}, {20, 2, 38}, {1, 0, 4}, {0, 1, 1}}, {{5, 1, 4}, {11, 3, 9}, {11, 2, 8}, {1, 1, 2}, {3, 2, 3}, {0, 2, 3}, {2, 1, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 2, 2}, {1, 0, 4}, {9, 2, 17}, {6, 0, 11}, {0, 1, 3}, {3, 0, 3}, {0, 0, 0}, {0, 0, 0}, {2, 0, 3}, {95, 6, 179}, {128, 1, 245}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {130, 1, 244}, {133, 1, 232}, {2, 1, 7}, {1, 0, 2}, {3, 0, 4}, {2, 1, 0}, {1, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {2, 0, 6}, {2, 0, 6}, {0, 0, 0}, {0, 0, 1}, {1, 1, 2}, {1, 1, 1}}, {{199, 52, 151}, {239, 56, 176}, {234, 57, 173}, {165, 46, 124}, {32, 6, 20}, {1, 3, 1}, {0, 2, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {2, 4, 5}, {75, 8, 131}, {127, 3, 240}, {123, 6, 217}, {34, 2, 63}, {1, 1, 2}, {1, 0, 1}, {0, 0, 0}, {1, 0, 1}, {51, 4, 96}, {132, 0, 245}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {133, 0, 242}, {109, 8, 201}, {1, 1, 2}, {33, 6, 24}, {132, 36, 98}, {24, 8, 20}, {2, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {6, 3, 4}, {76, 16, 52}}, {{244, 53, 180}, {244, 53, 179}, {244, 53, 179}, {244, 53, 180}, {241, 54, 178}, {76, 19, 64}, {3, 1, 5}, {4, 0, 1}, {2, 2, 6}, {45, 41, 8}, {14, 10, 4}, {0, 0, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {32, 1, 61}, {130, 0, 238}, {130, 0, 243}, {130, 0, 243}, {121, 6, 224}, {9, 0, 18}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {9, 1, 21}, {123, 6, 227}, {129, 0, 247}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {130, 0, 243}, {131, 0, 243}, {131, 1, 237}, {31, 2, 60}, {3, 2, 3}, {205, 53, 149}, {242, 54, 181}, {153, 40, 116}, {2, 1, 1}, {0, 0, 0}, {0, 0, 4}, {3, 1, 3}, {2, 3, 7}, {0, 2, 2}, {1, 0, 1}, {0, 0, 0}, {0, 0, 0}, {1, 0, 4}, {5, 2, 4}, {170, 45, 126}, {243, 52, 181}}, {{244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 53, 180}, {239, 55, 179}, {29, 7, 22}, {0, 0, 6}, {141, 127, 18}, {243, 217, 7}, {211, 195, 16}, {3, 3, 0}, {0, 0, 2}, {0, 0, 0}, {0, 0, 0}, {52, 5, 100}, {132, 0, 250}, {131, 0, 243}, {131, 0, 244}, {128, 2, 239}, {16, 2, 33}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {2, 1, 1}, {33, 2, 63}, {125, 4, 234}, {129, 0, 247}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {131, 0, 244}, {130, 0, 247}, {130, 1, 247}, {80, 6, 147}, {1, 0, 8}, {1, 2, 0}, {84, 19, 63}, {217, 59, 159}, {61, 15, 47}, {0, 1, 0}, {0, 0, 0}, {0, 1, 3}, {85, 79, 14}, {218, 200, 22}, {89, 80, 17}, {0, 3, 2}, {0, 0, 0}, {0, 0, 0}, {2, 0, 0}, {135, 37, 102}, {241, 53, 180}, {244, 52, 182}}, {{244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {243, 54, 180}, {240, 55, 175}, {173, 44, 122}, {2, 0, 7}, {119, 110, 19}, {247, 216, 6}, {199, 180, 18}, {2, 2, 1}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {15, 2, 30}, {125, 4, 234}, {130, 1, 241}, {130, 1, 245}, {91, 6, 170}, {4, 2, 8}, {1, 0, 0}, {1, 0, 1}, {1, 0, 1}, {1, 0, 1}, {3, 2, 2}, {36, 2, 65}, {126, 3, 230}, {132, 0, 244}, {127, 1, 243}, {130, 0, 243}, {131, 0, 243}, {130, 0, 243}, {130, 0, 244}, {128, 1, 238}, {70, 5, 131}, {3, 0, 6}, {1, 0, 1}, {0, 0, 0}, {1, 1, 1}, {6, 0, 4}, {1, 1, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {196, 174, 19}, {244, 218, 6}, {203, 186, 21}, {1, 2, 6}, {0, 0, 0}, {0, 0, 0}, {4, 1, 4}, {220, 50, 164}, {243, 54, 180}, {244, 53, 180}}, {{244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {243, 54, 180}, {244, 53, 177}, {234, 57, 174}, {9, 4, 7}, {5, 4, 2}, {45, 39, 8}, {19, 17, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {3, 1, 3}, {21, 2, 40}, {66, 4, 127}, {55, 2, 97}, {8, 3, 17}, {3, 0, 4}, {1, 0, 1}, {0, 1, 1}, {10, 1, 5}, {102, 29, 73}, {142, 38, 106}, {47, 12, 27}, {15, 3, 26}, {60, 4, 111}, {112, 6, 207}, {125, 3, 237}, {127, 3, 239}, {119, 5, 220}, {81, 5, 151}, {27, 2, 51}, {2, 2, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 2}, {67, 61, 13}, {189, 166, 20}, {66, 60, 11}, {1, 1, 3}, {0, 0, 0}, {0, 0, 0}, {39, 8, 30}, {241, 54, 177}, {244, 54, 180}, {244, 54, 180}}, {{244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {243, 53, 180}, {246, 52, 175}, {237, 58, 171}, {11, 5, 9}, {1, 1, 2}, {0, 1, 2}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 1}, {0, 0, 1}, {0, 0, 0}, {0, 0, 1}, {1, 0, 1}, {0, 0, 1}, {3, 0, 1}, {4, 2, 1}, {146, 37, 109}, {243, 54, 179}, {242, 54, 178}, {233, 54, 172}, {34, 5, 23}, {1, 0, 1}, {3, 1, 7}, {10, 1, 20}, {12, 1, 22}, {5, 0, 14}, {2, 0, 2}, {0, 0, 5}, {1, 0, 4}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 2}, {3, 0, 2}, {0, 1, 2}, {1, 0, 1}, {3, 1, 2}, {1, 1, 2}, {0, 0, 5}, {0, 0, 0}, {0, 0, 0}, {49, 10, 37}, {240, 55, 177}, {244, 54, 180}, {244, 54, 180}}, {{244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 54, 180}, {244, 53, 180}, {239, 55, 179}, {201, 51, 150}, {4, 1, 4}, {1, 0, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 0}, {17, 3, 11}, {230, 56, 172}, {244, 54, 180}, {244, 53, 180}, {242, 53, 181}, {132, 37, 98}, {1, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {2, 2, 4}, {14, 11, 4}, {39, 35, 7}, {10, 8, 3}, {1, 1, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {3, 1, 2}, {1, 2, 8}, {2, 9, 26}, {3, 15, 37}, {3, 8, 23}, {2, 2, 5}, {2, 1, 2}, {1, 1, 1}, {0, 0, 0}, {18, 1, 13}, {231, 52, 171}, {244, 54, 180}, {244, 54, 180}}, {{244, 54, 180}, {244, 54, 180}, {243, 54, 180}, {245, 52, 179}, {244, 53, 179}, {245, 52, 180}, {73, 17, 54}, {2, 0, 1}, {0, 0, 2}, {0, 0, 2}, {0, 0, 1}, {1, 1, 2}, {1, 0, 1}, {1, 1, 1}, {1, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 1}, {9, 2, 7}, {204, 52, 150}, {244, 53, 181}, {244, 53, 178}, {247, 51, 179}, {84, 23, 65}, {1, 0, 1}, {0, 0, 0}, {2, 0, 2}, {1, 1, 2}, {96, 86, 14}, {229, 204, 13}, {244, 218, 4}, {221, 198, 13}, {77, 70, 12}, {0, 1, 2}, {0, 1, 2}, {1, 0, 1}, {1, 0, 1}, {2, 8, 17}, {5, 55, 116}, {8, 95, 201}, {5, 112, 232}, {2, 114, 241}, {5, 111, 232}, {6, 93, 195}, {6, 48, 102}, {1, 3, 10}, {2, 0, 1}, {1, 1, 1}, {176, 42, 130}, {245, 53, 179}, {244, 53, 180}}, {{244, 53, 181}, {244, 54, 180}, {244, 52, 179}, {242, 53, 182}, {241, 54, 180}, {171, 42, 122}, {6, 3, 3}, {0, 0, 0}, {0, 0, 0}, {1, 1, 5}, {2, 0, 2}, {4, 24, 55}, {7, 68, 145}, {8, 67, 145}, {4, 21, 52}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 1}, {2, 1, 1}, {62, 14, 44}, {201, 50, 148}, {222, 54, 168}, {163, 39, 119}, {7, 1, 3}, {0, 0, 0}, {0, 0, 0}, {1, 0, 3}, {45, 38, 9}, {237, 215, 10}, {245, 217, 3}, {245, 219, 0}, {245, 219, 0}, {229, 206, 11}, {9, 6, 3}, {3, 0, 1}, {3, 0, 3}, {4, 21, 47}, {6, 100, 211}, {1, 114, 242}, {1, 114, 244}, {1, 114, 244}, {0, 115, 244}, {0, 114, 243}, {0, 114, 247}, {2, 112, 243}, {10, 94, 201}, {2, 13, 30}, {3, 0, 0}, {32, 6, 23}, {213, 49, 157}, {243, 53, 180}}, {{231, 53, 172}, {241, 54, 179}, {240, 54, 177}, {222, 49, 163}, {136, 36, 99}, {2, 2, 4}, {1, 1, 2}, {0, 0, 0}, {0, 0, 0}, {1, 0, 2}, {5, 20, 47}, {5, 110, 232}, {1, 114, 243}, {2, 115, 244}, {4, 108, 226}, {1, 6, 18}, {1, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 2}, {1, 1, 0}, {7, 1, 4}, {8, 2, 6}, {2, 2, 1}, {1, 1, 2}, {0, 0, 0}, {0, 0, 0}, {0, 1, 2}, {120, 107, 14}, {243, 219, 2}, {244, 219, 2}, {245, 219, 0}, {245, 219, 0}, {243, 219, 5}, {60, 58, 11}, {3, 0, 3}, {4, 10, 29}, {5, 106, 222}, {1, 115, 244}, {2, 113, 245}, {1, 114, 245}, {0, 115, 245}, {0, 115, 244}, {0, 114, 244}, {1, 113, 244}, {0, 113, 247}, {0, 115, 245}, {8, 104, 218}, {2, 11, 21}, {1, 0, 2}, {30, 8, 22}, {174, 43, 128}}, {{16, 2, 10}, {47, 11, 35}, {40, 9, 28}, {8, 3, 6}, {1, 2, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 3}, {7, 58, 121}, {0, 114, 244}, {0, 115, 244}, {0, 115, 243}, {1, 113, 242}, {6, 47, 96}, {6, 0, 3}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 2}, {94, 84, 17}, {245, 217, 5}, {245, 218, 3}, {244, 219, 0}, {245, 219, 0}, {243, 216, 7}, {37, 30, 7}, {2, 1, 1}, {13, 93, 192}, {0, 114, 243}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 243}, {9, 70, 148}, {1, 2, 5}, {2, 0, 1}, {2, 2, 2}}, {{0, 2, 1}, {0, 1, 1}, {3, 2, 0}, {4, 2, 1}, {1, 1, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {2, 0, 2}, {8, 48, 102}, {0, 114, 242}, {0, 114, 244}, {0, 114, 243}, {1, 114, 242}, {4, 30, 66}, {4, 0, 3}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {2, 1, 1}, {6, 4, 6}, {199, 180, 19}, {245, 218, 2}, {244, 219, 0}, {244, 218, 1}, {190, 172, 20}, {1, 3, 1}, {4, 9, 25}, {1, 115, 237}, {1, 114, 243}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 243}, {3, 115, 240}, {5, 15, 31}, {0, 0, 1}, {0, 1, 3}}, {{0, 1, 0}, {15, 10, 8}, {206, 192, 26}, {209, 194, 25}, {5, 2, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 3}, {1, 4, 14}, {11, 92, 191}, {0, 116, 244}, {1, 116, 241}, {11, 90, 188}, {0, 1, 6}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {3, 0, 0}, {1, 3, 1}, {3, 20, 6}, {15, 104, 46}, {21, 154, 69}, {16, 149, 69}, {7, 93, 37}, {2, 14, 2}, {2, 1, 1}, {7, 3, 3}, {120, 102, 23}, {191, 170, 26}, {101, 90, 17}, {4, 1, 6}, {0, 2, 1}, {6, 50, 109}, {0, 115, 245}, {0, 114, 243}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 244}, {0, 115, 243}, {4, 32, 76}, {0, 0, 0}, {0, 0, 0}}, {{0, 0, 1}, {63, 56, 11}, {246, 218, 4}, {247, 216, 7}, {48, 41, 10}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {4, 0, 1}, {1, 0, 3}, {2, 4, 10}, {4, 13, 36}, {3, 13, 35}, {4, 3, 6}, {0, 0, 0}, {2, 0, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {3, 28, 9}, {15, 182, 83}, {6, 218, 89}, {6, 220, 89}, {2, 222, 90}, {1, 223, 91}, {4, 221, 91}, {4, 217, 87}, {13, 153, 66}, {2, 13, 6}, {2, 1, 4}, {2, 1, 0}, {0, 1, 1}, {2, 0, 2}, {1, 0, 6}, {12, 81, 162}, {0, 114, 241}, {0, 115, 243}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {3, 112, 241}, {6, 48, 109}, {0, 0, 0}, {0, 0, 0}}, {{1, 0, 3}, {10, 7, 3}, {137, 125, 21}, {145, 133, 15}, {3, 4, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 3}, {6, 50, 21}, {9, 207, 89}, {2, 222, 90}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 222, 91}, {11, 188, 81}, {2, 21, 8}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {11, 77, 164}, {0, 114, 244}, {0, 115, 243}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {5, 48, 105}, {0, 0, 0}, {0, 0, 0}}, {{0, 0, 1}, {2, 0, 3}, {1, 1, 2}, {0, 0, 5}, {2, 0, 3}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 0}, {0, 2, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {2, 19, 8}, {9, 196, 83}, {3, 222, 90}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 222, 91}, {4, 222, 89}, {11, 163, 71}, {0, 2, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {6, 47, 104}, {1, 115, 246}, {1, 114, 243}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 243}, {3, 112, 246}, {5, 32, 72}, {0, 0, 0}, {0, 0, 0}}, {{0, 1, 1}, {3, 0, 6}, {0, 1, 5}, {1, 0, 5}, {3, 0, 2}, {1, 2, 2}, {1, 0, 3}, {0, 0, 0}, {0, 0, 0}, {2, 1, 1}, {11, 78, 34}, {11, 189, 80}, {10, 193, 81}, {13, 96, 43}, {2, 1, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 3}, {3, 1, 2}, {12, 119, 53}, {4, 222, 90}, {2, 222, 92}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {2, 223, 91}, {4, 220, 90}, {10, 74, 33}, {1, 1, 2}, {0, 0, 0}, {0, 0, 0}, {1, 6, 23}, {1, 113, 238}, {0, 114, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 244}, {4, 112, 238}, {3, 11, 26}, {0, 0, 0}, {0, 0, 0}}, {{1, 3, 10}, {7, 42, 88}, {7, 77, 161}, {5, 88, 185}, {6, 79, 167}, {6, 47, 97}, {2, 3, 12}, {0, 0, 0}, {0, 0, 0}, {4, 9, 2}, {11, 199, 83}, {3, 222, 90}, {3, 222, 90}, {8, 209, 86}, {5, 11, 3}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {1, 4, 1}, {9, 192, 81}, {4, 221, 91}, {3, 222, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {4, 222, 91}, {2, 223, 91}, {9, 158, 66}, {1, 1, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 4}, {10, 82, 171}, {0, 115, 243}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 243}, {0, 114, 243}, {7, 60, 127}, {2, 1, 2}, {0, 0, 0}, {0, 0, 0}}, {{7, 85, 179}, {2, 113, 243}, {1, 114, 244}, {0, 115, 244}, {0, 114, 243}, {0, 116, 244}, {9, 91, 191}, {3, 12, 23}, {1, 1, 3}, {4, 13, 4}, {10, 209, 87}, {3, 222, 89}, {3, 223, 89}, {8, 214, 87}, {4, 16, 5}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 0}, {3, 23, 9}, {8, 217, 92}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {10, 190, 78}, {2, 2, 1}, {0, 0, 0}, {0, 0, 0}, {2, 1, 2}, {3, 6, 19}, {5, 100, 209}, {2, 114, 242}, {0, 114, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 244}, {1, 116, 243}, {9, 92, 190}, {5, 6, 15}, {2, 1, 2}, {1, 1, 2}, {4, 10, 24}}, {{1, 115, 243}, {0, 114, 242}, {1, 112, 246}, {0, 115, 244}, {0, 114, 244}, {1, 113, 240}, {3, 114, 240}, {10, 89, 188}, {2, 4, 12}, {2, 1, 1}, {10, 120, 53}, {7, 217, 90}, {7, 219, 90}, {11, 141, 63}, {2, 1, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {5, 35, 15}, {6, 221, 90}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {8, 199, 84}, {1, 4, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 4}, {1, 1, 3}, {4, 11, 31}, {6, 90, 189}, {2, 113, 242}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {1, 113, 240}, {6, 87, 178}, {1, 5, 18}, {0, 0, 6}, {1, 2, 2}, {2, 1, 6}, {8, 80, 166}}, {{0, 115, 244}, {0, 114, 244}, {0, 114, 243}, {0, 115, 244}, {0, 114, 244}, {0, 114, 244}, {0, 115, 244}, {0, 115, 242}, {5, 28, 63}, {0, 0, 0}, {0, 1, 0}, {6, 31, 13}, {5, 37, 16}, {0, 2, 4}, {0, 2, 0}, {0, 1, 3}, {1, 2, 1}, {1, 2, 3}, {0, 1, 3}, {1, 1, 1}, {3, 19, 8}, {7, 217, 90}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {6, 189, 77}, {2, 0, 5}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 2}, {1, 3, 8}, {8, 44, 93}, {7, 89, 186}, {5, 100, 217}, {4, 106, 225}, {4, 100, 215}, {7, 86, 182}, {5, 36, 76}, {0, 1, 5}, {1, 1, 2}, {1, 1, 2}, {1, 0, 4}, {5, 26, 57}, {5, 112, 237}}, {{0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 244}, {0, 113, 246}, {6, 61, 133}, {0, 0, 0}, {0, 0, 0}, {2, 1, 2}, {1, 1, 2}, {0, 0, 1}, {4, 2, 6}, {46, 43, 6}, {150, 131, 14}, {129, 117, 15}, {32, 28, 5}, {2, 2, 1}, {1, 4, 0}, {9, 186, 79}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {13, 150, 67}, {2, 0, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 0}, {2, 0, 6}, {2, 0, 4}, {1, 1, 2}, {0, 1, 5}, {0, 2, 9}, {0, 1, 6}, {1, 1, 0}, {1, 2, 4}, {13, 7, 7}, {167, 153, 22}, {109, 97, 16}, {5, 4, 6}, {7, 61, 128}, {2, 114, 245}}, {{0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 243}, {4, 112, 246}, {7, 71, 150}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 3}, {85, 69, 11}, {244, 218, 2}, {245, 218, 0}, {245, 218, 2}, {238, 218, 13}, {48, 38, 8}, {2, 2, 4}, {9, 108, 46}, {4, 222, 92}, {3, 222, 90}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {2, 222, 91}, {3, 223, 88}, {6, 219, 91}, {8, 61, 28}, {2, 0, 2}, {0, 1, 4}, {0, 0, 1}, {3, 0, 4}, {0, 1, 1}, {1, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 1}, {109, 99, 19}, {245, 217, 5}, {244, 218, 5}, {32, 28, 10}, {8, 69, 145}, {1, 113, 242}}, {{0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 244}, {1, 114, 241}, {5, 52, 110}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {12, 9, 3}, {236, 210, 25}, {245, 218, 1}, {245, 219, 0}, {244, 218, 1}, {247, 217, 3}, {169, 154, 20}, {2, 1, 3}, {1, 9, 3}, {10, 191, 82}, {3, 223, 92}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {3, 223, 91}, {2, 223, 91}, {5, 222, 90}, {10, 150, 68}, {4, 0, 2}, {1, 2, 0}, {0, 0, 2}, {2, 1, 3}, {5, 2, 2}, {10, 5, 0}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 1}, {15, 8, 7}, {229, 212, 21}, {179, 162, 24}, {5, 3, 6}, {11, 53, 109}, {0, 113, 243}}, {{0, 114, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 242}, {1, 114, 241}, {3, 115, 239}, {6, 19, 42}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {21, 19, 10}, {243, 217, 14}, {244, 219, 0}, {245, 219, 0}, {245, 217, 5}, {244, 218, 2}, {205, 184, 14}, {2, 2, 2}, {3, 0, 3}, {3, 31, 12}, {14, 202, 90}, {3, 224, 91}, {2, 224, 88}, {3, 222, 89}, {4, 222, 87}, {3, 221, 91}, {2, 221, 93}, {2, 223, 87}, {4, 220, 92}, {14, 170, 75}, {2, 13, 4}, {0, 0, 0}, {0, 0, 0}, {2, 0, 3}, {20, 16, 4}, {237, 213, 5}, {236, 216, 5}, {32, 28, 5}, {0, 0, 1}, {0, 1, 2}, {3, 0, 1}, {2, 0, 0}, {0, 2, 3}, {4, 1, 0}, {1, 0, 3}, {0, 1, 3}, {0, 0, 0}, {4, 3, 2}, {2, 1, 1}, {0, 0, 2}, {3, 11, 28}, {5, 109, 229}}, {{1, 115, 242}, {0, 115, 244}, {0, 115, 244}, {0, 115, 244}, {0, 114, 243}, {0, 116, 247}, {1, 114, 240}, {8, 55, 114}, {2, 1, 6}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {4, 2, 2}, {191, 172, 22}, {245, 218, 0}, {245, 219, 0}, {244, 217, 5}, {245, 219, 1}, {117, 106, 15}, {1, 2, 1}, {1, 0, 1}, {1, 1, 1}, {4, 19, 8}, {11, 142, 62}, {7, 220, 91}, {2, 223, 89}, {8, 220, 89}, {3, 223, 91}, {2, 223, 90}, {8, 218, 91}, {10, 107, 48}, {3, 12, 4}, {3, 0, 5}, {0, 0, 0}, {0, 0, 0}, {0, 1, 2}, {25, 19, 3}, {241, 222, 3}, {243, 220, 4}, {37, 34, 5}, {0, 0, 1}, {1, 0, 2}, {1, 2, 2}, {24, 2, 46}, {81, 7, 149}, {69, 6, 123}, {8, 1, 13}, {2, 1, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 2, 2}, {9, 52, 109}}, {{4, 46, 98}, {7, 109, 224}, {2, 113, 242}, {1, 114, 244}, {2, 113, 242}, {6, 113, 239}, {6, 49, 107}, {1, 2, 8}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 1, 2}, {28, 23, 8}, {204, 187, 19}, {247, 217, 4}, {245, 217, 6}, {164, 151, 18}, {12, 11, 5}, {1, 1, 1}, {2, 0, 2}, {0, 1, 0}, {1, 0, 0}, {0, 2, 1}, {3, 28, 12}, {6, 67, 28}, {9, 101, 41}, {8, 94, 39}, {6, 59, 25}, {2, 20, 8}, {1, 1, 0}, {1, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {1, 0, 0}, {1, 2, 2}, {53, 47, 10}, {53, 47, 8}, {2, 2, 1}, {0, 0, 0}, {2, 0, 1}, {24, 3, 43}, {120, 4, 224}, {131, 0, 243}, {131, 0, 243}, {97, 7, 184}, {1, 2, 2}, {1, 0, 0}, {1, 1, 0}, {1, 0, 1}, {1, 1, 1}, {1, 0, 1}, {2, 2, 5}}, {{1, 1, 1}, {2, 9, 25}, {5, 32, 72}, {5, 43, 93}, {4, 35, 76}, {2, 10, 26}, {2, 0, 3}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 1, 2}, {1, 1, 4}, {7, 5, 6}, {47, 42, 8}, {39, 35, 9}, {4, 4, 3}, {1, 3, 2}, {4, 0, 3}, {3, 1, 5}, {2, 1, 2}, {1, 1, 1}, {0, 0, 0}, {0, 0, 0}, {1, 0, 1}, {3, 1, 2}, {2, 1, 1}, {2, 2, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 1, 2}, {59, 5, 109}, {131, 0, 244}, {131, 0, 244}, {129, 0, 244}, {127, 1, 231}, {6, 1, 13}, {6, 0, 3}, {3, 16, 6}, {9, 76, 36}, {5, 30, 12}, {5, 1, 1}, {1, 0, 0}}, {{1, 0, 1}, {1, 0, 2}, {1, 0, 2}, {0, 0, 1}, {0, 0, 0}, {1, 0, 1}, {1, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 3}, {0, 0, 0}, {0, 1, 0}, {1, 1, 1}, {26, 10, 19}, {130, 32, 93}, {186, 45, 139}, {210, 49, 155}, {205, 49, 152}, {170, 41, 127}, {95, 26, 72}, {6, 3, 5}, {1, 0, 2}, {0, 0, 1}, {1, 0, 0}, {1, 0, 0}, {1, 0, 1}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 1}, {0, 0, 0}, {0, 0, 0}, {1, 1, 1}, {38, 4, 75}, {130, 1, 244}, {131, 0, 244}, {131, 0, 245}, {119, 3, 219}, {4, 0, 8}, {4, 14, 4}, {13, 202, 89}, {3, 223, 89}, {9, 213, 90}, {9, 60, 26}, {1, 1, 2}}};


/* Scheduler stuff */

#define LEDMODE_SELECT_DEFAULT_INTERVAL  50000   // default scheduling time for LEDMODESELECT, in microseconds
void ledModeSelect() ;                          // prototype method
Scheduler runner;
Task taskLedModeSelect( LEDMODE_SELECT_DEFAULT_INTERVAL, TASK_FOREVER, &ledModeSelect);


#ifdef BUTTON_PIN
#define TASK_CHECK_BUTTON_PRESS_INTERVAL  10*TASK_RES_MULTIPLIER   // in milliseconds
void checkButtonPress() ;                       // prototype method
Task taskCheckButtonPress( TASK_CHECK_BUTTON_PRESS_INTERVAL, TASK_FOREVER, &checkButtonPress);
#endif

#ifdef AUTOADVANCE
void autoAdvanceLedMode() ;                       // prototype method
Task taskAutoAdvanceLedMode( 30 * TASK_SECOND, TASK_FOREVER, &autoAdvanceLedMode);
#endif

// ==================================================================== //
// ===                      MPU6050 stuff                         ===== //
// ==================================================================== //


// Arduino Wire library is required if I2Cdev I2CDEV_ARDUINO_WIRE implementation
// is used in I2Cdev.h
#if I2CDEV_IMPLEMENTATION == I2CDEV_ARDUINO_WIRE
#include "Wire.h"
#endif

#ifdef USING_MPU
MPU6050 mpu;

#define INTERRUPT_PIN 15  // use pin 2 on Arduino Uno & most boards

// MPU control/status vars
bool dmpReady = false;  // set true if DMP init was successful
uint8_t mpuIntStatus;   // holds actual interrupt status byte from MPU
uint8_t devStatus;      // return status after each device operation (0 = success, !0 = error)
uint16_t packetSize;    // expected DMP packet size (default is 42 bytes)
uint16_t fifoCount;     // count of all bytes currently in FIFO
uint8_t fifoBuffer[64]; // FIFO storage buffer

/*
  void dmpDataReady() ;
  void addGlitter( fract8 chanceOfGlitter) ;
  int mod(int x, int m) ;
  int activityLevel();
  bool isMpuUp();
  bool isMpuDown();
  void fillGradientRing( int startLed, CHSV startColor, int endLed, CHSV endColor ) ;
  void fillSolidRing( int startLed, int endLed, CHSV color ) ;
  void syncToBPM() ;
*/

int aaRealX = 0 ;
int aaRealY = 0 ;
int aaRealZ = 0 ;
int yprX = 0 ;
int yprY = 0 ;
int yprZ = 0 ;

// Wire.setSDA(18);
// Wire.setSCL(19);

void getDMPData() ; // prototype method
Task taskGetDMPData( 3 * TASK_RES_MULTIPLIER, TASK_FOREVER, &getDMPData);
#endif


// #ifdef DEBUG_WITH_TASK
// void printDebugging() ; // prototype method
// Task taskPrintDebugging( 100000, TASK_FOREVER, &printDebugging);
// #endif


void setup() {
//  delay( 3000 ); // power-up safety delay

  #ifdef NEO_PIXEL
  FastLED.addLeds<CHIPSET, LED_PIN, COLOR_ORDER>(leds, NUM_LEDS).setCorrection( TypicalLEDStrip );
  #endif

  #ifdef APA_102
// FastLED.addLeds<CHIPSET, 11, 13, BGR, DATA_RATE_MHZ(12)>(leds, NUM_LEDS).setCorrection( TypicalLEDStrip ); // TeensyLC
  FastLED.addLeds<APA102, MY_DATA_PIN, MY_CLOCK_PIN, BGR>(leds, NUM_LEDS);
  #endif

  FastLED.setBrightness(  maxBright );

  #if defined(BUTTON_PIN)
  pinMode(BUTTON_PIN, INPUT_PULLUP);
  #endif

  // On these boards one of the button pins is connected to these, so we pull it low so when the button is pressed, the input pin goes low too.
  #if defined(BUTTON_GND_PIN)
  pinMode(BUTTON_GND_PIN, OUTPUT);
  digitalWrite(BUTTON_GND_PIN, LOW);
  #endif

  #if defined(BUTTON_LED_PIN)
  pinMode(BUTTON_LED_PIN, OUTPUT);
  digitalWrite(BUTTON_LED_PIN, HIGH);
  #endif

  #if defined(BPM_BUTTON_PIN)
  pinMode(BPM_BUTTON_PIN, INPUT_PULLUP);
  #endif

// Not sure this does anything
  //FastLED.setMaxPowerInVoltsAndMilliamps(5,475);

  #ifdef DEBUG
  DEBUG_PRINT( F("Starting up. Numroutines = ")) ;
  DEBUG_PRINTLN( NUMROUTINES ) ;
  #endif

  yield();

  /* Start the scheduler */
  runner.init();
  runner.addTask(taskLedModeSelect);
  taskLedModeSelect.enable() ;

#ifdef BUTTON_PIN
  runner.addTask(taskCheckButtonPress);
  taskCheckButtonPress.enable() ;
#endif

#ifdef AUTOADVANCE
  runner.addTask(taskAutoAdvanceLedMode);
  taskAutoAdvanceLedMode.enable() ;
#endif

  // ==================================================================== //
  // ============================ MPU Stuff ============================= //
  // ==================================================================== //

#ifdef USING_MPU
  // join I2C bus (I2Cdev library doesn't do this automatically)
#if I2CDEV_IMPLEMENTATION == I2CDEV_ARDUINO_WIRE
  Wire.begin();
  Wire.setClock(400000); // 400kHz I2C clock. Comment this line if having compilation difficulties
#elif I2CDEV_IMPLEMENTATION == I2CDEV_BUILTIN_FASTWIRE
  Fastwire::setup(400, true);
#endif

DEBUG_PRINTLN( F("Wire library begin done.")) ;

  mpu.initialize();
  DEBUG_PRINTLN( F("MPU initialize done.")) ;
  pinMode(INTERRUPT_PIN, INPUT);
  devStatus = mpu.dmpInitialize();
  DEBUG_PRINTLN( F("DMP initialize done.")) ;

#ifdef RING
// Strip MPU
// Your offsets:  -1527 -1127 2339  51  4 -7

  mpu.setXAccelOffset(-1527 );
  mpu.setYAccelOffset(-1127);
  mpu.setZAccelOffset(2339);
  mpu.setXGyroOffset(51);
  mpu.setYGyroOffset(4);
  mpu.setZGyroOffset(-7);
#endif

#ifdef NEWFAN
//  Your offsets:	410	-255	1745	-114	19	-23
// Data is printed as: acelX acelY acelZ giroX giroY giroZ

  mpu.setXAccelOffset(410 );
  mpu.setYAccelOffset(-255);
  mpu.setZAccelOffset(1745);
  mpu.setXGyroOffset(-114);
  mpu.setYGyroOffset(19);
  mpu.setZGyroOffset(-23);
#endif

#ifdef GLOWSTAFF
//  Your offsets:	410	-255	1745	-114	19	-23
// Data is printed as: acelX acelY acelZ giroX giroY giroZ

mpu.setXAccelOffset(-235);
mpu.setYAccelOffset(2035);
mpu.setZAccelOffset(1104); // 1688 factory default for my test chip
mpu.setXGyroOffset(100);
mpu.setYGyroOffset(0);
mpu.setZGyroOffset(36);
#endif

DEBUG_PRINTLN( F("MPU calibrate done")) ;

  if (devStatus == 0) {
    mpu.setDMPEnabled(true);
    attachInterrupt(digitalPinToInterrupt(INTERRUPT_PIN), dmpDataReady, RISING);
    mpuIntStatus = mpu.getIntStatus();
    dmpReady = true;
    packetSize = mpu.dmpGetFIFOPacketSize();

  } else {
    // ERROR!
    // 1 = initial memory load failed
    // 2 = DMP configuration updates failed
    // (if it's going to break, usually the code will be 1)
    DEBUG_PRINT(F("DMP Initialization failed (code "));
    DEBUG_PRINT(devStatus);
    DEBUG_PRINTLN(F(")"));
  }

  DEBUG_PRINTLN( F("DMP enable done")) ;

  runner.addTask(taskGetDMPData);
  taskGetDMPData.enable() ;
#endif


#ifdef DEBUG_WITH_TA/
  runner.addTask(taskPrintDebugging);
  taskPrintDebugging.enable() ;
#endif

  tapTempo.setBPM(DEFAULT_BPM);
  inputString.reserve(200);
}  // end setup()




void loop() {
  yield() ;
  runner.execute();
}




void ledModeSelect() {
  yield();

  if ( strcmp(routines[ledMode], "p_rb") == 0  ) {
    FillLEDsFromPaletteColors(0) ;

#ifdef RT_P_RB_STRIPE
  } else if ( strcmp(routines[ledMode], "p_rb_stripe") == 0 ) {
    FillLEDsFromPaletteColors(1) ;
#endif

#ifdef RT_P_OCEAN
  } else if ( strcmp(routines[ledMode], "p_ocean") == 0 ) {
    FillLEDsFromPaletteColors(2) ;
#endif

#ifdef RT_P_HEAT
  } else if ( strcmp(routines[ledMode], "p_heat") == 0 ) {
    FillLEDsFromPaletteColors(3) ;
#endif

#ifdef RT_P_LAVA
  } else if ( strcmp(routines[ledMode], "p_lava") == 0 ) {
    FillLEDsFromPaletteColors(4) ;
#endif

#ifdef RT_P_PARTY
  } else if ( strcmp(routines[ledMode], "p_party") == 0 ) {
    FillLEDsFromPaletteColors(5) ;
#endif

#ifdef RT_P_CLOUD
  } else if ( strcmp(routines[ledMode], "p_cloud") == 0 ) {
    FillLEDsFromPaletteColors(6) ;
#endif

#ifdef RT_P_FOREST
  } else if ( strcmp(routines[ledMode], "p_forest") == 0 ) {
    FillLEDsFromPaletteColors(7) ;
#endif

#ifdef RT_TWIRL1
  } else if ( strcmp(routines[ledMode], "twirl1") == 0 ) {
    twirlers( 1, false ) ;
    taskLedModeSelect.setInterval( TASK_IMMEDIATE ) ;
#endif

#ifdef RT_TWIRL2
  } else if ( strcmp(routines[ledMode], "twirl2") == 0 ) {
    twirlers( 2, false ) ;
    taskLedModeSelect.setInterval( TASK_IMMEDIATE ) ;
#endif

#ifdef RT_TWIRL4
  } else if ( strcmp(routines[ledMode], "twirl4") == 0 ) {
    twirlers( 4, false ) ;
#endif

#ifdef RT_TWIRL6
  } else if ( strcmp(routines[ledMode], "twirl6") == 0 ) {
    twirlers( 6, false ) ;
#endif

#ifdef RT_TWIRL2_O
  } else if ( strcmp(routines[ledMode], "twirl2o") == 0 ) {
    twirlers( 2, true ) ;
#endif

#ifdef RT_TWIRL4_O
  } else if ( strcmp(routines[ledMode], "twirl4o") == 0 ) {
    twirlers( 4, true ) ;
#endif

#ifdef RT_TWIRL6_O
  } else if ( strcmp(routines[ledMode], "twirl6o") == 0 ) {
    twirlers( 6, true ) ;
#endif

#ifdef RT_FADE_GLITTER
  } else if ( strcmp(routines[ledMode], "fglitter") == 0 ) {
    fadeGlitter() ;
    //taskLedModeSelect.setInterval( map( constrain( activityLevel(), 0, 4000), 0, 4000, 20, 5 ) * TASK_RES_MULTIPLIER ) ;
#ifdef USING_MPU
    taskLedModeSelect.setInterval( map( constrain( activityLevel(), 0, 2500), 0, 2500, 40, 2 ) * TASK_RES_MULTIPLIER ) ;
#else
    taskLedModeSelect.setInterval( 20 * TASK_RES_MULTIPLIER ) ;
#endif
#endif

#ifdef RT_DISCO_GLITTER
  } else if ( strcmp(routines[ledMode], "dglitter") == 0 ) {
    discoGlitter() ;
#ifdef USING_MPU
    taskLedModeSelect.setInterval( map( constrain( activityLevel(), 0, 2500), 0, 2500, 40, 2 ) * TASK_RES_MULTIPLIER ) ;
#else
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif
#endif

#ifdef RT_GLED
    // Gravity LED
  } else if ( strcmp(routines[ledMode], "gled") == 0 ) {
    gLed() ;
    taskLedModeSelect.setInterval( 5 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_FIRE2012
  } else if ( strcmp(routines[ledMode], "fire2012") == 0 ) {
    Fire2012() ;
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_BLACK
  } else if ( strcmp(routines[ledMode], "black") == 0 ) {
    fill_solid(leds, NUM_LEDS, CRGB::Black);
    FastLED.show();
    taskLedModeSelect.setInterval( 500 * TASK_RES_MULTIPLIER ) ;  // long because nothing is going on anyways.
#endif

#ifdef RT_RACERS
  } else if ( strcmp(routines[ledMode], "racers") == 0 ) {
    racingLeds() ;
    taskLedModeSelect.setInterval( 8 * TASK_RES_MULTIPLIER) ;
#endif

#ifdef RT_WAVE
  } else if ( strcmp(routines[ledMode], "wave") == 0 ) {
    waveYourArms() ;
    taskLedModeSelect.setInterval( 15 * TASK_RES_MULTIPLIER) ;
#endif

#ifdef RT_SHAKE_IT
  } else if ( strcmp(routines[ledMode], "shakeit") == 0 ) {
    shakeIt() ;
    taskLedModeSelect.setInterval( 8 * 1000 ) ;
#endif

#ifdef RT_STROBE1
  } else if ( strcmp(routines[ledMode], "strobe1") == 0 ) {
    strobe1() ;
    taskLedModeSelect.setInterval( 5 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_STROBE2
  } else if ( strcmp(routines[ledMode], "strobe2") == 0 ) {
    strobe2() ;
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_HEARTBEAT
  } else if ( strcmp(routines[ledMode], "heartbeat") == 0 ) {
    heartbeat() ;
    taskLedModeSelect.setInterval( 5 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_VUMETER
  } else if ( strcmp(routines[ledMode], "vumeter") == 0 ) {
    vuMeter() ;
    taskLedModeSelect.setInterval( 8 * TASK_RES_MULTIPLIER) ;
#endif

#ifdef RT_FASTLOOP
  } else if ( strcmp(routines[ledMode], "fastloop") == 0 ) {
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER) ;
    fastLoop( false ) ;
#endif

#ifdef RT_FASTLOOP2
  } else if ( strcmp(routines[ledMode], "fastloop2") == 0 ) {
    fastLoop( true ) ;
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER) ;
#endif

#ifdef RT_PENDULUM
  } else if ( strcmp(routines[ledMode], "pendulum") == 0 ) {
    pendulum() ;
    taskLedModeSelect.setInterval( 1500 ) ; // needs a fast refresh rate
#endif

#ifdef RT_BOUNCEBLEND
  } else if ( strcmp(routines[ledMode], "bounceblend") == 0 ) {
    bounceBlend() ;
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_JUGGLE_PAL
  } else if ( strcmp(routines[ledMode], "jugglepal") == 0 ) {
    jugglePal() ;
    taskLedModeSelect.setInterval( 150 ) ; // fast refresh rate needed to not skip any LEDs
#endif

#ifdef RT_NOISE_LAVA
  } else if ( strcmp(routines[ledMode], "noise_lava") == 0 ) {
    if( tapTempo.getBPM() > 50 ) {
      fillnoise8( 0, beatsin8( tapTempo.getBPM(), 1, 25), 30, 1); // pallette, speed, scale, loop
    } else {
      fillnoise8( 0, 1, 30, 1); // pallette, speed, scale, loop
    }
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_NOISE_PARTY
  } else if ( strcmp(routines[ledMode], "noise_party") == 0 ) {
    if( tapTempo.getBPM() > 50 ) {
      fillnoise8( 1, beatsin8( tapTempo.getBPM(), 1, 25), 30, 1); // pallette, speed, scale, loop
    } else {
      fillnoise8( 1, 1, 30, 1); // pallette, speed, scale, loop
    }
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_NOISE_OCEAN
  } else if ( strcmp(routines[ledMode], "noise_ocean") == 0 ) {
    fillnoise8( 2, beatsin8( tapTempo.getBPM(), 1, 25), 30, 1); // pallette, speed, scale, loop
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif


#ifdef RT_QUAD_STROBE
  } else if ( strcmp(routines[ledMode], "quadstrobe") == 0 ) {
    quadStrobe();
    taskLedModeSelect.setInterval( (60000 / (tapTempo.getBPM() * 4)) * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_PULSE_3
  } else if ( strcmp(routines[ledMode], "pulse3") == 0 ) {
    pulse3();
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_PULSE_5_1
  } else if ( strcmp(routines[ledMode], "pulse5_1") == 0 ) {
    pulse5(1, true);
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_PULSE_5_2
  } else if ( strcmp(routines[ledMode], "pulse5_2") == 0 ) {
    pulse5(2, true);
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_PULSE_5_3
  } else if ( strcmp(routines[ledMode], "pulse5_3") == 0 ) {
    pulse5(3, true);
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_THREE_SIN_PAL
  } else if ( strcmp(routines[ledMode], "tsp") == 0 ) {
    threeSinPal() ;
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_COLOR_GLOW
  } else if ( strcmp(routines[ledMode], "color_glow") == 0 ) {
    colorGlow() ;
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_FAN_WIPE
  } else if ( strcmp(routines[ledMode], "fan_wipe") == 0 ) {
    fanWipe() ;
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_DROPLETS
} else if ( strcmp(routines[ledMode], "droplets") == 0 ) {
    droplets() ;
    taskLedModeSelect.setInterval( 30 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_BOUNCYBALLS
} else if ( strcmp(routines[ledMode], "bouncyballs") == 0 ) {
    bouncyBalls() ;
    taskLedModeSelect.setInterval( 30 * TASK_RES_MULTIPLIER ) ;
#endif

#ifdef RT_DROPLETS2
} else if ( strcmp(routines[ledMode], "droplets2") == 0 ) {
    droplets2() ;
    taskLedModeSelect.setInterval( 10 * TASK_RES_MULTIPLIER ) ;
#endif


#ifdef RT_POVPATTERNS
} else if ( strcmp(routines[ledMode], "povpatterns") == 0 ) {
  #define width(array) sizeof(array) / sizeof(array[0])
  DEBUG_PRINTLN( "." ) ;

    povPatterns(30, Image, width(Image));
    taskLedModeSelect.setInterval( 30000 ) ; // microseconds ; fast needed for POV patterns
#endif

  }

}
